user nginx;
worker_processes  ${WORKER_PROCESSES};

error_log  stderr;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  access_log	/dev/stdout;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  keepalive_timeout  65;

  gzip  on;
  gzip_static  on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_types application/x-javascript application/xhtml+xml application/xml application/xml+rss text/css text/javascript text/plain text/xml application/json;
  gzip_vary on;
  gzip_disable "MSIE [1-6].(?!.*SV1)";

  client_max_body_size ${CLIENT_MAX_BODY_SIZE};

  server_names_hash_bucket_size 64;

  proxy_buffer_size   16k;
  proxy_buffers   4 16k;
  proxy_busy_buffers_size   32k;

  upstream unicorn {
    server unix:/tmp/sockets/unicorn.sock fail_timeout=0;
  }

  server {
    listen 80;

    server_name ${SERVER_NAME};

    access_log	/dev/stdout;

    keepalive_timeout 5;

    root ${NGINX_WWW};

    location /health_check {
      access_log off;

      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_next_upstream off;
      proxy_pass http://unicorn;
      break;
    }

    location /500.html {
      internal;
    }

    location / {
      # ELB stores the protocol used between the client
      # and the load balancer in the X-Forwarded-Proto request header.
      # Check for 'https' and redirect if not
      if ($http_x_forwarded_proto != 'https') {
          rewrite ^(.*) https://$host$request_uri? permanent;
      }
      try_files $uri/index.html $uri @unicorn;
    }

    location @unicorn {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;

      proxy_read_timeout 60;
      proxy_send_timeout 60;

      proxy_pass http://unicorn;
    }

    location ~* \.(ico|css|js|gif|jpe?g|png|woff?2)(\?[0-9]+)?$ {
        expires max;
        access_log off;
    }

    error_page 500 502 503 504 /500.html;
  }
}